-- OBS: ANALISAR COMO FAZER E USAR: Multi-tenancy

CREATE DATABASE ACONTROLES;
USE ACONTROLES;

-- TABELA ASSINANTES;
-- (AQUI OS DADOS DOS ASSINANTES E COBRANÇAS
CREATE TABLE IF NOT EXISTS ASSINANTES(
  codigo INT UNSIGNED PRIMARY KEY,
  nomefantasia VARCHAR(200) ,
  razaosocial VARCHAR(200) ,
  situacao VARCHAR(1) ,
  endereço VARCHAR(200) , 
  numero VARCHAR(30) , 
  bairro VARCHAR(60) , 
  complemento VARCHAR(100) , 
  cod_cidade int, 
  cep varchar(8), 
  telefone varchar(40),  
  email VARCHAR(200) ,
  valormensal numeric(18,2),
  tipopagto varchar(100), 
  numerocartao varchar(100), 
  nomecartao varchar(100), 
  venccartao varchar(20), 
  codigocartao varchar(20), 
  chavepix varchar(100) 
) ENGINE=InnoDB;

-- TABELA ASSINANTESPGTOS
--  (CONTROLE DOS PAGAMENTOS)
CREATE TABLE IF NOT EXISTS ASSINANTESPGTOS(
  sequencial INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  cod_assinante INT UNSIGNED NOT NULL,
  mesano VARCHAR(20) , 
  valor numeric(18,2),
  datapgto DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (cod_assinante) REFERENCES ASSINANTES(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;

-- TABELA ASSINANTESACESSOS
-- CONTROLE DE ACESSO
CREATE TABLE IF NOT EXISTS ASSINANTESACESSOS(
  sequencial INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  cod_assinante INT UNSIGNED NOT NULL,
  iduser VARCHAR(50) , 
  ipacesso VARCHAR(100) , 
  tipoacesso VARCHAR(100) , 
  dataacesso DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (cod_assinante) REFERENCES ASSINANTES(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;


-- TABELAS BANCO DE DADOS CLIENTE1001
-- AQUI PARA CADA CLIENTE UM BANCO NOVO EX: CLIENTE1002, CLIENTE1003

CREATE DATABASE CLIENTE1001;
USE CLIENTE1001;

CREATE TABLE IF NOT EXISTS empresa (
  codigo INT UNSIGNED PRIMARY KEY,
  nomefantasia VARCHAR(200) ,
  razaosocial VARCHAR(200) ,
  situacao VARCHAR(1) ,
  endereço VARCHAR(200) , 
  numero VARCHAR(30) , 
  bairro VARCHAR(60) , 
  complemento VARCHAR(100) , 
  cod_cidade int, 
  cep varchar(8), 
  telefone varchar(40), 
  logotipo varchar(300),
  email VARCHAR(200)   
) ENGINE=InnoDB;


-- USUARIO
-- (USUARIOS DA EMPRESA PARA ACESSO)
CREATE TABLE IF NOT EXISTS USUARIO (  
  iduser VARCHAR(50) PRIMARY KEY,
  NOME VARCHAR(100) , 
  cod_empresa INT UNSIGNED NOT NULL,
  SENHA VARCHAR(50) , 
  telefone varchar(40),  
  email VARCHAR(200) ,
  FOREIGN KEY (cod_empresa) REFERENCES empresa(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;

-- CONFIGGERAL 
-- Aqui as configuções gerais do catalogo
CREATE TABLE IF NOT EXISTS CONFIGGERAL (
  cod_empresa INT UNSIGNED PRIMARY KEY,
  TIPOENTREGA VARCHAR(50)  ,
  TIPOLAYOUT VARCHAR(50) , 
  CHAVEAPI VARCHAR(200) ,
  FOREIGN KEY (cod_empresa) REFERENCES empresa(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;

-- CATEGORIA 
-- grupo de produtos(codigo,descricao) 
-- Ex: ANEIS, BRINCOS, COLARES, ETC...)
CREATE TABLE IF NOT EXISTS CATEGORIA (
  CODIGO VARCHAR(40) PRIMARY KEY,
  DESCRICAO VARCHAR(150)  ,
  SITUACAO VARCHAR(1)  
) ENGINE=InnoDB;


-- PRODUTO 
-- aqui as informações do produto principal:
CREATE TABLE IF NOT EXISTS PRODUTO (
  CODIGO VARCHAR(40) PRIMARY KEY,
  DESCRICAO VARCHAR(150)  ,
  DESCRICAOAUX VARCHAR(300)  ,
  REFERENCIA VARCHAR(150)  ,
  COD_CATEGORIA VARCHAR(40) NOT NULL,
  PESO NUMERIC(18,3),
  SITUACAO VARCHAR(1) , 
  FOREIGN KEY (COD_CATEGORIA) REFERENCES CATEGORIA(CODIGO)   
) ENGINE=InnoDB;

-- PRODUTOVAR
CREATE TABLE IF NOT EXISTS PRODUTOVAR (
  COD_PRODUTO VARCHAR(40) NOT NULL,
  COD_VARIACAO VARCHAR(40) NOT NULL,
  COR VARCHAR(100)  ,
  TAMANHO VARCHAR(100)  ,
  ESTOQUE NUMERIC(18,3),
  SITUACAO VARCHAR(1) , 
  primary key(COD_PRODUTO, COD_VARIACAO),
  FOREIGN KEY (COD_PRODUTO) REFERENCES PRODUTO(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;


-- LISTADEPRECOS
CREATE TABLE IF NOT EXISTS LISTADEPRECOS (
  CODIGO VARCHAR(40) PRIMARY KEY,
  DESCRICAO VARCHAR(100) ,
  SITUACAO VARCHAR(1)  
) ENGINE=InnoDB;

-- LISTADEPRECOSITENS
-- (cod_lista, cod_produto, cod_variacao, preço)
CREATE TABLE IF NOT EXISTS LISTADEPRECOSITENS (
  COD_LISTA VARCHAR(40) NOT NULL,
  COD_PRODUTO VARCHAR(40) NOT NULL,
  COD_VARIACAO VARCHAR(40) NOT NULL,
  PRECO NUMERIC(18,3),
  SITUACAO VARCHAR(1) , 
  primary key(COD_LISTA, COD_PRODUTO, COD_VARIACAO),
  FOREIGN KEY (COD_LISTA) REFERENCES LISTADEPRECOS(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;

-- CATALOGO
CREATE TABLE IF NOT EXISTS CATALOGO (
  CODIGO VARCHAR(200) NOT NULL,
  DESCRICAO VARCHAR(200) NOT NULL,
  LINKCOMPLETO VARCHAR(300) NOT NULL,
  COD_LISTA VARCHAR(40) NOT NULL,
  ACRESCIMO NUMERIC(18,3),
  DESCONTO NUMERIC(18,3),
  VALORMINIMO NUMERIC(18,3),
  QTDMINIMA NUMERIC(18,3),
  SITUACAO VARCHAR(1) , 
  primary key(CODIGO)
) ENGINE=InnoDB;

-- CATALOGOITENS
CREATE TABLE IF NOT EXISTS CATALOGOITENS (  
  SEQUENCIAL INT AUTO_INCREMENT NOT NULL,
  COD_CATALOGO VARCHAR(200) NOT NULL,
  COD_PRODUTO VARCHAR(100) NOT NULL,
  COD_VARIACAO VARCHAR(40) NOT NULL,  
  SITUACAO VARCHAR(1) , 
  primary key(SEQUENCIAL),
  FOREIGN KEY (COD_CATALOGO) REFERENCES CATALOGO(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;

-- CLIENTE
CREATE TABLE IF NOT EXISTS CLIENTE (
  codigo INT NOT NULL,
  nomefantasia VARCHAR(200) ,
  razaosocial VARCHAR(200) ,
  situacao VARCHAR(1) ,
  endereço VARCHAR(200) , 
  numero VARCHAR(30) , 
  bairro VARCHAR(60) , 
  complemento VARCHAR(100) , 
  cod_cidade int, 
  cep varchar(8), 
  telefone varchar(40), 
  email VARCHAR(200) ,
  primary key(codigo)
) ENGINE=InnoDB;

-- PEDIDOVENDA
CREATE TABLE IF NOT EXISTS PEDIDOVENDA (
  CODIGO int NOT NULL,
  COD_CLIENTE INT not null,
  DATA DATETIME DEFAULT CURRENT_TIMESTAMP,
  COD_CATALOGO VARCHAR(200) ,
  COD_LISTA VARCHAR(40) ,  
  ACRESCIMO NUMERIC(18,3),
  DESCONTO NUMERIC(18,3),
  VALORTOTAL NUMERIC(18,3),
  SITUACAO VARCHAR(1) , 
  primary key(CODIGO),
  FOREIGN KEY (COD_CLIENTE) REFERENCES CLIENTE(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;


-- PEDIDOVENDAITENS
CREATE TABLE IF NOT EXISTS PEDIDOVENDAITENS (  
  SEQUENCIAL INT AUTO_INCREMENT NOT NULL,
  COD_PEDIDOVENDA int NOT NULL,
  COD_PRODUTO VARCHAR(100) ,
  COD_VARIACAO VARCHAR(100) ,
  COMPLEMENTO VARCHAR(200) ,
  QUANTIDADE NUMERIC(18,3),
  VALOR NUMERIC(18,3),
  ACRESCIMO NUMERIC(18,3),
  DESCONTO NUMERIC(18,3),
  VALORLIQUIDO NUMERIC(18,3),
  VALORTOTAL NUMERIC(18,3),
  SITUACAO VARCHAR(1) , 
  primary key(SEQUENCIAL),
  FOREIGN KEY (COD_PEDIDOVENDA) REFERENCES PEDIDOVENDA(CODIGO)
    ON DELETE CASCADE
) ENGINE=InnoDB;
